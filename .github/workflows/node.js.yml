# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Node.js CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [16.x]
        mongodb-version: ['5.0']
    steps:
    - name: Start MongoDB  
      run: sudo docker run --name mongodb -d -p 27017:27017 mongo:${{ matrix.mongodb-version }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'   
    - name: Install aws cli
      run: sudo apt update && sudo apt install awscli
    - name: create AWS configuration file and copy
      run: |
        mkdir -p ~/.aws
        cd ~/.aws
        pwd
        touch credentials
        echo "[default]" >> credentials
        echo aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}  >> credentials
        echo aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }} >> credentials
        cat credentials
        touch config
        echo "[default]" >> config
        echo "region = ap-northeast-2" >> config
        echo "output = json" >> config
    - name: Download mongoDB dump file
      run: aws s3 cp --recursive s3://${{ secrets.AWS_S3_BUCKET_NAME }}/dump dump
    - name: Copy to mongodb container
      run: docker cp dump mongodb:/dump
    - name: Restore DB from dump file
      run: docker exec mongodb sh -c 'mongorestore ${{ secrets.DB_PATH }} dump/${{ secrets.DB_NAME }}'
    - name: Install dependencies from package-lock.json
      run: npm ci
    - name: Run unit tests
      run: npm test
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }} 
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        DB_PATH: ${{ secrets.DB_PATH }}
        FRONT_URL: ${{ secrets.FRONT_URL }}
        PORT: ${{ secrets.PORT }}
        SESSION_KEY: ${{ secrets.SESSION_KEY }}
